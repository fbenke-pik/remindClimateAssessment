% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assessmentDataToGDX.R
\name{assessmentDataToGDX}
\alias{assessmentDataToGDX}
\alias{dumpToGDX}
\title{Something}
\usage{
dumpToGDX(
  assessmentData,
  exportConf,
  interpolateYears = NULL,
  logFile = NULL,
  verbose = NULL
)
}
\arguments{
\item{assessmentData}{Data frame as produced by \code{climate-assessment}}

\item{exportConf}{Associates climate assessment variables with the GDX file names and their GAMS counterpart}

\item{interpolateYears}{In case the periods in the emission report do not match the one reported by climate
assessment, we need to interpolate to be able to integrate them with existing GAMS data}

\item{logFile}{Path to the log file. Default is NULL}

\item{verbose}{Determines logging level. If set to TRUE, log messages are printed to std out}
}
\description{
Something
}
\examples{
\dontrun{
# Generates REMIND emission report, extracts relevant variables and reshapes. Note: This funtion
can be used in a tidyverse pipeline.
emissionDataForClimateAssessment(
  remind2::reportEmi(fulldata.gdx),
  scenarioName = "SSP2EU-NPi-ar6",
  climateAssessmentYaml = file.path(
    system.file(package = "piamInterfaces"), "iiasaTemplates", "climate_assessment_variables.yaml"
  )
  logFile = "output/missing.log"
)
}
}
\author{
Tonn RÃ¼ter
}
